{"ast":null,"code":"var _jsxFileName = \"/Users/kamper541/Documents/Web_DEV/lasthwdo/lasthwdo/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport IncomeExpense from './components/IncomeExpense';\nimport TransactionTable from './components/TransactionTable';\nimport About from './components/About';\nimport firebase from '../src/fb/firebase';\nimport './App.css';\nlet db = firebase.firestore();\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: []\n    };\n\n    this.loadData = () => {\n      // get data from variable\n      const data = [{\n        id: v4(),\n        name: 'Dinner with family',\n        amount: -1250,\n        date: new Date(2020, 1, 28)\n      }, {\n        id: v4(),\n        name: 'Movie',\n        amount: -200,\n        date: new Date(2020, 1, 29)\n      }, {\n        id: v4(),\n        name: 'Lottery',\n        amount: 1500,\n        date: new Date(2020, 2, 2)\n      }, {\n        id: v4(),\n        name: 'Salary',\n        amount: 6500,\n        date: new Date(2020, 1, 25)\n      }];\n      this.setState({\n        transactions: data\n      });\n    };\n\n    this.loadJsonData = () => {\n      // get data from json file: \"public/static/data.json\"\n      axios.get('/static/data.json').then(res => {\n        const data = res.data;\n        this.setState({\n          transactions: data\n        });\n      });\n    };\n\n    this.loadfb = () => {\n      firebase.firestore().collection('data').onSnapshot(items => {\n        const transaction = []; //array type\n\n        items.forEach(res => {\n          transaction.push(res.data());\n        });\n        this.setState({\n          transactions: transaction\n        });\n      });\n    };\n\n    this.validateForm = (name, amount) => {\n      if (!name || !amount) {\n        window.alert('Please fill in ALL data fields.');\n        return false;\n      } else if (!isNaN(name)) {\n        window.alert('Please fill only TEXT detail in transaction name.');\n        return false;\n      } else if (+amount === 0) {\n        window.alert('Amount CANNOT be zero!');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.addTransaction = (name, amount) => {\n      if (!this.validateForm(name, amount)) {\n        return false;\n      }\n\n      const newTransaction = {\n        id: v4(),\n        name,\n        amount: +amount,\n        date: new Date()\n      };\n      this.state.transactions.unshift(newTransaction);\n      this.setState({\n        transactions: this.state.transactions\n      }); // firebase.firestore()\n      // .collection('list')\n      // .push({\n      //     transactions:this.state.transactions\n      // })\n    };\n\n    this.clearTransactions = () => {\n      let ans = window.confirm(\"You are going to clear all transaction history!!!\");\n\n      if (ans) {\n        this.setState({\n          transactions: []\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    // this.loadData();   // load data from variable\n    this.loadJsonData(); // load data from JSON file on server\n    //this.loadfb();\n    // this.loadFirebase(); // load data from Firebase\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container mt-4 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(AddTransaction, {\n        addTransaction: this.addTransaction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Balance, {\n        transactions: this.state.transactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(IncomeExpense, {\n        transactions: this.state.transactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(TransactionTable, {\n        transactions: this.state.transactions,\n        clearTransactions: this.clearTransactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/kamper541/Documents/Web_DEV/lasthwdo/lasthwdo/src/App.jsx"],"names":["React","Component","v4","axios","BrowserRouter","Router","Route","Header","AddTransaction","Balance","IncomeExpense","TransactionTable","About","firebase","db","firestore","App","state","transactions","loadData","data","id","name","amount","date","Date","setState","loadJsonData","get","then","res","loadfb","collection","onSnapshot","items","transaction","forEach","push","validateForm","window","alert","isNaN","addTransaction","newTransaction","unshift","clearTransactions","ans","confirm","componentDidMount","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {v4} from 'uuid';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport IncomeExpense from './components/IncomeExpense';\nimport TransactionTable from './components/TransactionTable';\nimport About from './components/About';\nimport firebase from '../src/fb/firebase';\n\nimport './App.css';\nlet db = firebase.firestore();\nexport default class App extends Component {\n  state = {\n    transactions: []\n  }\n\n  loadData = () => {\n    // get data from variable\n    const data = [ \n      {\n        id: v4(),\n        name: 'Dinner with family',\n        amount: -1250,\n        date: new Date(2020,1,28)\n      },\n      {\n        id: v4(),\n        name: 'Movie',\n        amount: -200,\n        date: new Date(2020,1,29)\n      },\n      {\n        id: v4(),\n        name: 'Lottery',\n        amount: 1500,\n        date: new Date(2020,2,2)\n      },\n      {\n        id: v4(),\n        name: 'Salary',\n        amount: 6500,\n        date: new Date(2020,1,25)\n      }\n    ];\n\n    this.setState( { transactions: data } );\n  }\n\n  loadJsonData = () => {\n    // get data from json file: \"public/static/data.json\"\n    axios.get('/static/data.json')\n      .then( res => {\n        const data = res.data;\n        this.setState( { transactions: data } );\n      });\n  }\n\n  loadfb = () =>{\n    firebase.firestore().collection('data').onSnapshot(items => {\n      const transaction = [] //array type\n      items.forEach( res => {\n        transaction.push(res.data())\n      })\n      this.setState({transactions:transaction})\n    })\n  }\n\n  componentDidMount() {\n    // this.loadData();   // load data from variable\n    this.loadJsonData();  // load data from JSON file on server\n    //this.loadfb();\n    // this.loadFirebase(); // load data from Firebase\n  }\n\n  validateForm = (name,amount) => {\n    if (!name || !amount) {\n      window.alert('Please fill in ALL data fields.');\n      return false;\n    } else if ( !isNaN(name)) {\n      window.alert('Please fill only TEXT detail in transaction name.');\n      return false;\n    } else if (+amount === 0) {\n      window.alert('Amount CANNOT be zero!');\n      return false;\n    }\n  \n    return true;\n  }\n\n  addTransaction = (name,amount) => {\n\n    if(!this.validateForm(name,amount)) {\n      return false;\n    }\n\n    const newTransaction = {\n      id: v4(),\n      name,\n      amount: +amount,\n      date: new Date()\n    }\n\n    this.state.transactions.unshift(newTransaction);\n    this.setState( { transactions: this.state.transactions } );\n    // firebase.firestore()\n    // .collection('list')\n    // .push({\n    //     transactions:this.state.transactions\n    // })\n  }\n\n  clearTransactions = () => {\n    let ans = window.confirm(\"You are going to clear all transaction history!!!\")\n    if (ans) {\n      this.setState( { transactions: [] } );\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"container mt-4 mb-5\">\n        <Header />\n\n        <Route exact path=\"/\" render={ props => (\n          <div>\n          <AddTransaction addTransaction={this.addTransaction} />\n          <Balance transactions={this.state.transactions}/>\n          <IncomeExpense transactions={this.state.transactions}/>\n          <TransactionTable \n              transactions={this.state.transactions} \n              clearTransactions={this.clearTransactions} />\n          </div>\n        )} />\n          \n        <Route path=\"/about\" component={About} />        \n      </div>\n      </Router>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}